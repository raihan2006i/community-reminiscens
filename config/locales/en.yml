# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

en:
  api:
    docs:
      resources:
        common:
          params:
            page: Allows for paging through the results. Default is 1.
            per_page: Limit the number of results returned. Default is 10.
          errors:
            not_found: Not Found, If resource is not found.
            bad_request: Bad Request, If format of the parameters are wrong.
            invalid_resource: Invalid Resource, if resource validation failed.
        themes:
          short_desc: Themes
          common:
            params:
              name: Theme name
              start_age: Theme start age
              end_age: Theme end age
          index:
            short_desc: Returns available story themes.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a theme.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a theme.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a theme.
            full_desc:
            params:
            errors:
        contexts:
          short_desc: Contexts
          common:
            params:
              name: Context name
          index:
            short_desc: Returns available story contexts.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a context.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a context.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a context.
            full_desc:
            params:
            errors:
        guests:
          short_desc: Guests
          common:
            params:
              first_name: Guest's first name
              last_name: Guest's last name
              title: Guest's title
              birthday: Guest's birthday in YYYY-MM-DD format
              address: Guest's address
              city: Guest's city
              country: Guest's country
              phone: Guest's phone
              mobile: Guest's mobile
              group_id: Group's id where the guest is belongs
          index:
            short_desc: Returns available guests.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a guest.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a guest.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a guest.
            full_desc:
            params:
            errors:
        caregivers:
          short_desc: Caregivers
          common:
            params:
              first_name: Caregiver's first name
              last_name: Caregiver's last name
              title: Caregiver's title
              birthday: Caregiver's birthday in YYYY-MM-DD format
              address: Caregiver's address
              city: Caregiver's city
              country: Caregiver's country
              phone: Caregiver's phone
              mobile: Caregiver's mobile
              email: Caregiver's email
              password: Caregiver's password to login in the system
              password_confirmation: Password confirmation
          authorize:
            short_desc: Authorizes a caregiver.
            full_desc:
            params:
              email: Caregiver's email
              password: Caregiver's password
            errors:
          index:
            short_desc: Returns available caregivers.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a caregiver.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a caregiver.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a caregiver.
            full_desc:
            params:
            errors:
        groups:
          short_desc: Groups
          common:
            params:
              name: Name of the group
              manager_id: Manager id of the group. manager_id should be a Caregiver id
          index:
            short_desc: Returns available groups.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a group.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a group.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a group.
            full_desc:
            params:
            errors:
          guests:
            short_desc: Returns guests of a group.
            full_desc:
            params:
            errors:
        stories:
          short_desc: Stories
          common:
            params:
              theme_id: Theme id of the story
              context_id: Context id of the story
              other_theme: Theme name of the story. If a story theme is not available in the system use this param
              other_context: Context name of the story. If a story context is not available in the system use this param
              fragment_contents: Fragments or contents of the story
              attachments: Attachments of the story
              teller_id: Teller id of the story. Teller id is a Guest id
              telling_date: When the story was told by Guest. Telling date should be in YYYY-MM-DD format
          index:
            short_desc: Returns available stories.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a story.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a story.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a story.
            full_desc:
            params:
            errors:
        story_fragments:
          short_desc: Fragments
          common:
            params:
              content: Content of the fragment
          index:
            short_desc: Returns available fragments of a story.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a fragment of a story.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a fragment of a story.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a fragment of a story.
            full_desc:
            params:
            errors:
          destroy:
            short_desc: Delete a fragment of a story.
            full_desc:
            params:
            errors:
        story_attachments:
          short_desc: Attachments
          common:
            params:
              media: The file to be attach
          index:
            short_desc: Returns available attachments of a story.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns an attachment of a story.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create an attachment of a story.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update an attachment of a story.
            full_desc:
            params:
            errors:
          destroy:
            short_desc: Delete an attachment of a story.
            full_desc:
            params:
            errors:
        comments:
          short_desc: Comments
          common:
            params:
              comment: Content of the comment
        story_comments:
          short_desc: Comments
          common:
            params:
              comment: Content of the comment
          index:
            short_desc: Returns available comments of a story.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a comment of a story.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a comment of a story.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a comment of a story.
            full_desc:
            params:
            errors:
          destroy:
            short_desc: Delete a comment of a story.
            full_desc:
            params:
            errors:
        sessions:
          short_desc: Sessions
          common:
            params:
              title: Title of the session
              start_at: Starting time of the session. Start at should be in YYYY-MM-DD HH:MM:SS format
              end_at: Ending time of the session. End at should be in YYYY-MM-DD HH:MM:SS format
              status: Status of the session. Status can have only value 'not_started', 'ongoing', 'finished'
          index:
            short_desc: Returns available sessions.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a session.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a session.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a session.
            full_desc:
            params:
            errors:
          destroy:
            short_desc: Delete a session.
            full_desc:
            params:
            errors:
        slots:
          short_desc: Slots
          common:
            params:
              title: Title of the slot
              duration: Duration of the slot. duration should be in minutes
              teller_id: Teller id of the slot. Teller id is a Guest id
          index:
            short_desc: Returns available slots.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a slot.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a slot.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a slot.
            full_desc:
            params:
            errors:
          destroy:
            short_desc: Delete a slot.
            full_desc:
            params:
            errors:
        blocks:
          short_desc: Blocks
          common:
            params:
              blockable_id: Id of the block
              blockable_type: Type of the block. Type can be Story or Question
          index:
            short_desc: Returns available blocks.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a block.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a block.
            full_desc:
            params:
            errors:
          update:
            short_desc: Update a block.
            full_desc:
            params:
            errors:
          destroy:
            short_desc: Delete a block.
            full_desc:
            params:
            errors:
        session_histories:
          short_desc: Session histories
          common:
            params:
              session_id: Id of the session
              slot_id: Id of the slot
              block_id: Id of the block
          index:
            short_desc: Returns available session_histories.
            full_desc:
            params:
            errors:
          show:
            short_desc: Returns a session history.
            full_desc:
            params:
            errors:
          create:
            short_desc: Create a session history.
            full_desc:
            params:
            errors:
        questions:
          short_desc: Questions
          search:
            short_desc: Search questions
            full_desc:
            params:
              query: Query string to search questions. search will match this query string with question's content and theme
            errors:
        multimedia:
          short_desc: Multimedia
          common:
            params:
              query: Query string to search multimedia
              type: Type of the multimedia
          local_search :
            short_desc: Search multimedia in local database
            full_desc:
            params:
            errors:
          thirdparty_search:
            short_desc: Search multimedia in thirdparty search engines. For now we search through only Google
            full_desc:
            params:
            errors:
    errors:
      not_found: The given resource could not be found.
      forbidden: The requested action was forbidden.
      bad_request: The given request was not as expected.
      invalid_resource: The given resource was invalid.
      unauthorized: The given request is unauthorized.
  activerecord:
    errors:
      not_a_guest: is not a guest
      not_a_caregiver: is not a caregiver
    models:
      context: Contexts
      theme: Themes
      story_fragment: Fragments
      comment: Comments
      attachment: Attachments
      admin_user: Admin Users
      caregiver: Caregivers
      guest: Guests
      question: Questions
      story: Stories
      session: Sessions
      slot: Slots
      block: Blocks
      session_history: Session Histories
      multimedia: Multimedia
    model:
      context: Context
      theme: Theme
      story_fragment: Fragment
      comment: Comment
      attachment: Attachment
      admin_user: Admin User
      caregiver: Caregiver
      guest: Guest
      question: Question
      story: Story
      session: Session
      slot: Slot
      block: Block
      session_history: Session History
      multimedia: Multimedia
    attributes:
      context:
        name: Name
      theme:
        name: Name
      story_fragment:
        content: Content
